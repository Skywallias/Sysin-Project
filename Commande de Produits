Public sub OrdonnerCommande(byval robot as integer, byval mission as string(,))
  Dim CheminBrutMachine as new list(of common_robot.Point2D)
  Dim CheminMachineExpedition as new list(of common_robot.Point2D)
  Dim CheminExpeditionBrut as new list(of common_robot.Point2D)
  
  Dim Produit as string = mission(1,0)
  Dim Machines as new Infogen("Machine")
  Dim MachineAUtiliser as new common_robot.Point2D
  For i = 0 to Machines.getNames().count - 1
    If infoprecise(Machines.getPos()(i), "Gamme")(0,0) = Produit
      MachineAUtiliser = Machines.getPos()(i)
    end if
  Next
  
  Dim StockBrut as new infogen("Stock Brut")
  Dim StockBrutAUtiliser as new common_robot.Point2D
  Dim j as integer = 0
  Dim Min as integer = 2^(1/2)*(Me.radar().getlength(0) -1)
  For i = 0 to StockBrut.getNames().count - 1
    If ((MachineAUtiliser.X - StockBrut.getPos()(i).X)^2 + ((MachineAUtiliser.Y _ StockBrut.getPos()(i).Y)^2)^(1/2) < Min then
      Min = ((MachineAUtiliser.X - StockBrut.getPos()(i).X)^2 + ((MachineAUtiliser.Y _ StockBrut.getPos()(i).Y)^2)^(1/2)
      j = i
    end if
  Next
  StockBrutAUtiliser = StockBrut.getPos()(j)
  
  Dim StockExp as new infogen("Stock Expédition")
  Dim StockExpAUtiliser as new common_robot.Point2D
  Min = 2^(1/2)*(Me.radar().getlength(0) -1)
  For i = 0 to StockExpAUtiliser.getNames().count - 1
    If ((MachineAUtiliser.X - StockExp.getPos()(i).X)^2 + ((MachineAUtiliser.Y _ StockExp.getPos()(i).Y)^2)^(1/2) < Min then
      Min = ((MachineAUtiliser.X - StockExp.getPos()(i).X)^2 + ((MachineAUtiliser.Y _ StockExp.getPos()(i).Y)^2)^(1/2)
      j = i
    end if
  Next
  StockExpAUtiliser = StockExp.getPos()(j)
  
  J.Chemin(robot, StockBrutAUtiliser)
  J.ramasser
  
  Dim CheminBrutMachine as new list(of common_robot.Point2D) = J.chemin(robot, MachineAUtiliser)
  J.déposer
  J.ExecuterOperation
  J.ramasser
  
  Dim CheminMachineExp as new list(of common_robot.Point2D) = J.chemin(robot, StockExpAUtiliser)
  J.déposer
  
  Dim CheminExpBrut as new list(of common_robot.Point2D) = J.chemin(robot, StockBrutAUtiliser)
  
  For i = 0 to mission(0,0) - 1
    J.ramasser
  
    J.SuivreChemin(CheminBrutMachine)
    J.déposer
    J.ExecuterOperation
    J.ramasser
  
    J.SuivreChemin(CheminMachineStock)
    J.déposer
    
    J.suivreChemin(CheminExpBrut)
  Next
  
  
